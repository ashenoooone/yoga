import type { Metadata } from "next";
import localFont from "next/font/local";
import "./globals.css";
import { Header } from "./_components/header";
import { ReactNode } from "react";
import { Footer } from "./_components/footer";
import { ReactQueryProvider } from "@/shared/providers/react-query-provider";

const geistSans = localFont({
  src: "./fonts/GeistVF.woff",
  variable: "--font-geist-sans",
  weight: "100 200 300 400 500 600 700 800 900",
});

const geistMono = localFont({
  src: "./fonts/GeistMonoVF.woff",
  variable: "--font-geist-mono",
  weight: "100 200 300 400 500 600 700 800 900",
});

const pacifico = localFont({
  src: "./fonts/Pacifico-Regular.ttf",
  variable: "--font-pacifico",
  weight: "100 200 300 400 500 600 700 800 900",
});

// todo сделать сео
export const metadata: Metadata = {
  title: "YOGA",
  description: "Generated by create next app",
};

export interface LayoutProps {
  body: ReactNode;
  header: ReactNode;
  footer: ReactNode;
}

export const Layout = (props: LayoutProps) => {
  const { body, footer, header } = props;
  return (
    <ReactQueryProvider>
      <body
        className={`${geistSans.variable} ${geistMono.variable} ${pacifico.variable} antialiased`}
      >
        <div className="flex flex-col gap-2 min-h-screen">
          {header}
          <div className="flex-grow flex">{body}</div>
          {footer}
        </div>
        <div id="modals"></div>
      </body>
    </ReactQueryProvider>
  );
};

export default function RootLayout({
  children,
  modal,
}: Readonly<{
  children: React.ReactNode;
  modal: React.ReactNode;
}>) {
  return (
    <html lang="ru">
      <Layout
        footer={<Footer />}
        header={<Header />}
        body={children}
      />
      {modal}
    </html>
  );
}
